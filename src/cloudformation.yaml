AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  TargetSNSTopicParam:
    Type: String
    Description: Enter the ARN of your target SNS topic to publish debounced alarm notifications to.

Resources:
  udsmiderGateway:
    Type: AWS::EC2::InternetGateway

  udsmiderVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'VPC'

  udsmiderGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: udsmiderGateway
      VpcId:
        Ref: udsmiderVPC

  #
  #public subnet stuff
  #

  udsmiderPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: udsmiderVPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'PublicSubnet'

  udsmiderEIPforNAT:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  udsmiderNAT:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt: [ udsmiderEIPforNAT, AllocationId ]
      SubnetId:
        Ref: udsmiderPublicSubnet

  udsmiderPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: udsmiderVPC

  udsmiderPublicRouteSubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: udsmiderPublicRouteTable
      SubnetId:
        Ref: udsmiderPublicSubnet

  udsmiderPublicRouteforIG:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: udsmiderGateway
      RouteTableId:
        Ref: udsmiderPublicRouteTable

  #
  #private subnet stuff
  #

  udsmiderPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: udsmiderVPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'PrivateSubnet'

  udsmiderPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: udsmiderVPC

  udsmiderPrivateRouteSubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: udsmiderPrivateRouteTable
      SubnetId:
        Ref: udsmiderPrivateSubnet

  udsmiderPrivateRouteforNAT:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: udsmiderNAT
      RouteTableId:
        Ref: udsmiderPrivateRouteTable

  #other stuff

  udsmiderSecurityGroupLambda:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'SecurityGroup'
            - 'lambdafunc'
      VpcId:
        Ref: udsmiderVPC
      SecurityGroupEgress:
        CidrIp: 0.0.0.0/0
        IpProtocol: -1

  udsmiderSecurityGroupElasticache:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'SecurityGroup'
            - 'elasticache'
      VpcId:
        Ref: udsmiderVPC
      SecurityGroupEgress:
        CidrIp: 0.0.0.0/0
        IpProtocol: -1
      SecurityGroupIngress:
        SourceSecurityGroupId:
          Ref: udsmiderSecurityGroupLambda
        FromPort: 6379
        ToPort: 6379
        IpProtocol: tcp

  udsmiderElasticacheSubnet:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description:
        Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - 'SubnetGroup'
            - 'elasticache'
      SubnetIds:
        - Ref: udsmiderPrivateSubnet

  udsmiderElasticache:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t2.medium
      Engine: redis
      NumCacheNodes: 1
      VpcSecurityGroupIds:
        - Ref: udsmiderSecurityGroupElasticache
      CacheSubnetGroupName:
        Ref: udsmiderElasticacheSubnet

  udsmiderLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  udsmiderLambdaIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: udsmiderLambdaIAMPolicy
      Roles:
        - Ref: udsmiderLambdaIAMRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeNetworkInterfaces'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'xray:PutTraceSegments'
              - 'xray:PutTelemetryRecords'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DeleteNetworkInterface'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'sns:*'
            Resource: '*'

  udsmiderLambda:
    Type: AWS::Lambda::Function
    DependsOn: udsmiderLambdaIAMPolicy
    Properties:
      Code:
        S3Bucket: cqmt
        S3Key: udsmider.zip
      Handler: index.handler
      Role:
        Fn::GetAtt: [ udsmiderLambdaIAMRole, Arn ]
      Runtime: nodejs6.10
      VpcConfig:
        SecurityGroupIds:
          - Ref: udsmiderSecurityGroupLambda
        SubnetIds:
          - Ref: udsmiderPrivateSubnet
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt: [ udsmiderElasticache, RedisEndpoint.Address ]
          REDIS_PORT: 6379
          TARGET_SNS_TOPIC_ARN:
            Ref: TargetSNSTopicParam
      Timeout: 10

  udsmiderSourceSNSTopic:
    Type: AWS::SNS::Topic
    DependsOn: udsmiderLambda
    Properties:
      Subscription:
        - Endpoint:
            Fn::GetAtt: [ udsmiderLambda, Arn ]
          Protocol: lambda

  udsmiderSNSLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: udsmiderSourceSNSTopic
      FunctionName:
        Ref: udsmiderLambda

Outputs:
  SourceSNSTopic:
    Description: Send alarm notifications to this SNS topic to debounce them. The debounced alarms will be forwarded to the given target SNS topic passed in TargetSNSTopicParam.
    Value:
      Ref: udsmiderSourceSNSTopic
